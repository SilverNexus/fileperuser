2016-01-12  SilverNexus
	* Makefile.am: Add -Wall and -Wextra to the CFLAGS.
	* search.c: Add const qualifiers to some variables and pointers.

2016-01-11  SilverNexus
	* search.c: Refactored stdio search to behave more like mmaped search.
	  Also utilized inode stat information in nftw(3) when parsing files.
	  Refactored all stat calls to be outside parse_file, and check file size before entering parse_file.
	* search.h: Consolidated preprocessor conditionals rendered obsolete by reading files
	  into memory when using stdio.
	  Removed unneeded include for stdio.h.
	* settings.h: Preprocessor conditional cleanup from a more uniform search backend.
	* result_list.c: Change add_result() to be void.
	* result_list.h: Alter declaration to match add_result() definition.

2016-01-10  SilverNexus
	* search.c: Refactored search code to reduce duplication of code.
	* search.h: Add decarations for new functions from the refactor.
	* parseArgs.c: Alter the single-match flags to assign to the new search functions.
	* settings.h: Alter the function pointer to the search function to match the new parameter list.
	* settings.c: Changed default search function to be refactored version.

2015-12-23  SilverNexus
	* output.c: Reduce severity of failed load of output file. If it fails, print to stdout.
	  Then shortened the file output phrase to reduce output size.
	  Alter check for stdout printing to match new design.
	* settings.c: Change default behavior to print to stdout.
	  Make case insensitive searches only exist if strcasestr does.
	* parseArgs.c: Retired -O and --stdout flags. Replaced by default behavior.
	  Only parse -n and --no-case if strcasestr exists.
	* settings.h: Remove flags field; it is no longer used.
	* main.c: Alter check for stdout printing to match new design.
	* README: Remove usage on the -O and --stdout flags.
	  Added a note to -n and --no-case indicating they only exist if strcasestr is present.
	* configure.ac: Removed check for vsnprintf. It is part of C99.

2015-12-22  SilverNexus
	* search.c: Refactor mmap()ed search to only find the line number when a match
	  is found.
	  Also, fixed a bug introduced from the refactor that caused it to always search for "alt".
	  Patched out a potential buffer overflow in the dirent-based implementation of the folder walk.
	* configure.ac: Removed redundant check for strstr(). It is part of C99.
	  Add check for strdup().
	* main.c: Fixed a bug where searchResults.txt was deleted when output is routed to stdout.
	* result_list.c: Use strdup() if we have it.

2015-12-21  SilverNexus
	* search.c: Add implemetation to use mmap() if available, otherwise use stdio.
	* configure.ac: Add check for function mmap().

2015-12-20  SilverNexus
	* search.c: Refactor file opening to be inside file search functions. Reduces parameters
	  passed to the function.
	* search.h: Adjust the function declarations to match the definition.
	* settings.h: Adjust the search function pointer declaration to match the definitions.

2015-12-19  SilverNexus
	* configure.ac: Removed several checks redundant with needing a C99-compliant compiler.
	  Then added check for dirent.h for alternate implementation for systems w/o nftw(3).
	* search.c: Abstracted out the search functions.
	  Reimplemented a dirent-based directory walk.
	* search.h: Add requisite function declarations.
	* main.c: Add preprocessor directives to control which directory search function is called.
	* parseArgs.c: Change the single-match flags to adjust a function pointer instead of a flag.
	* settings.c: Implement the single- or multi-search as a functon pointer.
	* settings.h: Remove single_search flag. Implement as a function pointer.
	* TODO: Mention difference in output on tested directory as a bug.
	  Then I found the bug a few commits later and fixed it.
	* dir_list.c: Change an out of memory error to be fatal.

2015-12-18  SilverNexus
	* parseArgs.c: Added argument pasing for single-line match feature
	* settings.c: Refactored byte for stdout printing as flags byte
	* search.c: Added check for single-match mode.
	* output.c: Refactored stdout printing check to use flags byte.
	* settings.h: Refactored stdout printing byte as flags byte. Defined flag values.
	* README: Add information about -1 and --single-match flags.

2015-12-17  SilverNexus
	* parseArgs.c: Optimize arg checking andd fix segfault on bad flags and no search string.

2015-12-15  SilverNexus
	* main.c: Moved output of messages to stderr to make room for stdout output.
	* output.c: Added check for printing to stdout.
	* settings.h: Added flag for printing to stdout.
	* settings.c: Implemented default value (0) for stdout output.
	* parseArgs.c: Added parsing for -O and --stdout flags. Also updated help message.
	* README: Updated usage information.

2015-11-04  SilverNexus
	* main.c: Added signal handling to output results found at SIGINT.
	* output.*: Moved the result output code to its own function.
	* Makefile.am: Add output.c to the build.

2015-11-02  SilverNexus
	* search.c: Implemented support for specific path search exclusions.
	  Then proceeded to refactor path search to allow for specific files to be excluded.
	* settings.h: Added a variable to store the length of the base search path.
	* settings.c: Initialize the search path length to zero.
	* parseArgs.c: Add support for parsing -X flag.
	  Added informtion about -X to the help message
	* main.c: Ensure the base path length is reset between different search root traversals.
	* README: Added information about -X flag.

2015-10-27  SilverNexus
	* configure.ac: Made a configure flag to enable debugging.
	* Makefile.am: Set up flags for debug and nondebug modes.
	* search.c: Fix a crash that would occur if directories were excluded.

2015-06-08  SilverNexus
	* search.c: Loop optimization in the file search section.

2015-06-03  SilverNexus
	* search.c: Refactor check for failure to load output file to occur
	  only if the file was just loaded.
	* configure.ac: Bump version to 0.02-dev.
	* Makefile.am: Add new file result_list.c.
	* main.c: Implement delayed recording of results.
	* search.c: Defer recording of results to after the directory tree is searched.
	  This solves a bug involving fileperuser writing to the results file while reading from it.
	* TODO: Removed statement about the bug mentioned above, as it is resolved.
	* result_list.c: Implemented a linked list of structures for finding search results.
	* result_list.h: Defines a linked list of structures for finding search results.

2015-06-02  SilverNexus
	* dir_list.h,
	  dir_list.c: Removed unused function free_dir_node().

2015-06-01  SilverNexus
	* search.c: Refactored search algorithm to use strstr and strcasestr.
	  In the process, also made multiple instances of the search string
	  discoverable by the search.
	* search.h: Removed obsolete function for searching.
	* parseArgs.c: Removed obsolete setting for length of search string.
	  Adjusting --no-case flag to set strstr or strcasestr.
	* settings.c: Changed default comparison function to strstr.
	  Removed initialization of search sting length settings value.
	* settings.h: Removed search string length from settings.
	* configure.ac: Updated requirements to match the new implementation.
	* README: Updated Requirements ssection to match the new implementation.

-----------------------------------------------------------------------------------------
                                      Changes for 0.02
-----------------------------------------------------------------------------------------

2015-06-01  SilverNexus
	* configure.ac: Make sure to check for a C99 compiler,
	  not just any C compiler.
	* README: Updated some information to ensure accuracy.

2015-05-30  SilverNexus
	* search.c: Refactored search algorithm to use nftw(3).
	* search.h: Function prototype for function called by nftw(3).
	* main.c: Change the search function to nftw(3).
	* Makefile.am: Add a couple defines to make nftw work.
	* configure.ac: Remove check for dirent, add check for ftw.h
	  and nftw(3).

2015-03-10  SilverNexus
	* settings.h: Added field to allow for custom log file names/paths.
	* settings.c: Set default log file to fileperuser.log.
	* ErrorLog.c: Drop hardcoded log file name in favor of settings-set one.
	* parseArgs.c: Established command-line argument to set log file name: -f.
	* README: Updated usage guide to include the new flags -f and --log-file
	* TODO: Removed case sensitivity from the future plans (already implemented).

2015-01-31  SilverNexus
	* settings.h: Added Function pointer to allow for case insensitive searching.
	* settings.c: Set default search to case sensitive.
	* parseArgs.c: Added -n and --no-case command-line flags for no case searches.
	* configure.ac: Added check for strncasecmp.
	* search.c: Changed search function to use pointer in settings.
	* README: Updated usage guide to include the new flags -n and --no-case

2015-01-31  SilverNexus
	* settings.c,
	  settings.h: Made initialization and release of settings return no values.

2014-12-04	SilverNexus
	* parseArgs.c: Added the print level message control flags to the help message.

2014-10-01	SilverNexus
	* ErrorLog.c,
	  ErrorLog.h: Make log_event function return void, rather than int.

2014-06-23	SilverNexus
	* main.c: Make default search directory be current directory.

2014-06-12	SilverNexus
	* main.c: Made final message vary for when match are and are not found.

2014-06-11	SilverNexus
	* parseArgs.c: Added support for log message suppression.
	* settings.h: Added setting for log message suppression.
	* settings.c: Default suppression level is below INFO.
	* ErrorLog.c: Check minimum print level before printing log message.

2014-06-11	SilverNexus
	* main.c: Add functionality that times the search.

2014-06-09	SilverNexus
	* settings.h: Add field for length of search string.
	* settings.c: Initialize search string length.
	* parseArgs.c: Calculate length at assignment of search string.
	* search.c: Remove old length calculation in every line searched.

2014-06-05	SilverNexus
	* Makefile.am,
	* configure.ac,
	* autogen.sh: use autotools as part of build process

-----------------------------------------------------------------------------------------
                                      Changes for 0.01
-----------------------------------------------------------------------------------------

2014-06-04	SilverNexus
	* ErrorLog.c: Make a FATAL error exit the program directly.
	* main.c: Register free_settings with atexit library function.
	* parseArgs.c: Change exit(0) to exit(EXIT_SUCCESS).

2014-06-03	SilverNexus
	* parseArgs.h: Add a function prototype for a universal help message.
	* parseArgs.c: Move the help message to its own function.
	* main.c: Make improper argument usage cause the program to print help and exit.

2014-05-29	SilverNexus
	* settings.h: Add field to store minimum log level that writes to file.
	* settings.c: Set default minimum log level to WARNING.
	* parseArgs.c: Add -l and --loglevel flags to valid flags.
	* ErrorLog.c: Add parsing to evaluate log level.
	* main.c, dir_list.c, ErrorLog.h, search.c: Change name of logging function.
	* Makefile: Change optimization to -Ofast.

2014-05-23	SilverNexus
	* settings.h: Add output_file field for custom output file location.
	* settings.c: Set a default value for output_file.
	* parseArgs.c: Add information and parsing for -o and --output flags.
	* main.c: Adjust file handling and output to handle variable output file name.

2014-05-22	SilverNexus
	* settings.h: Add search_string to settings so fewer variables go on the stack during recursion.
	* settings.c: Initialized search string to 0 in init_settings().
	* parseArgs.c: Added parsing for -s and --search flags.
	* main.h: Update function headers for extraction of search string.
	* main.c: Update function calls to reflect addition of search string to settings.

2014-05-22	SilverNexus
	* main.c: Fix bug in which a folder without a trailing "/" as the search directory would crash the program.

2014-05-22	SilverNexus
	* dir_list.c,
	* dir_list.h,
	* settings.h,
	* settings.c: Cleaned up dir_list code by making functions generic to dir_lists.
	* main.c: updated list iterator to match new typedef.
	* Makefile: Added dir_list.o to build process.

2014-05-22	SilverNexus
	* settings.h: Changed root_dir to be a linked list.
	* settings.c: Added function to add to the root_dir linked list.
	* parseArgs.c: Changed parsing of root_dir to utilize linked list.
	* main.c: Added parsing of multiple root directories.

2014-05-21	SilverNexus
	* main.c: Only open output file when needed.

2014-05-21	SilverNexus
	* settings.h,
	* settings.c,
	* main.c,
	* parseArgs.c: Made root directory search argument location controlled by -d flag.

2014-05-21	SilverNexus
	* ErrorLog.c: All messages go to log.txt.

2014-05-21	SilverNexus
	* Initial commits. Setting up files for later use.
